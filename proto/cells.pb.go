// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cells.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CellItem struct {
	Id         int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Img        string `protobuf:"bytes,2,opt,name=img" json:"img,omitempty"`
	Text       string `protobuf:"bytes,3,opt,name=text" json:"text,omitempty"`
	Premission int32  `protobuf:"varint,4,opt,name=premission" json:"premission,omitempty"`
	Cate       int32  `protobuf:"varint,5,opt,name=cate" json:"cate,omitempty"`
	FromID     string `protobuf:"bytes,6,opt,name=fromID" json:"fromID,omitempty"`
	FromURL    string `protobuf:"bytes,7,opt,name=fromURL" json:"fromURL,omitempty"`
	CreatedAt  int64  `protobuf:"varint,8,opt,name=createdAt" json:"createdAt,omitempty"`
	UpdatedAt  int64  `protobuf:"varint,9,opt,name=updatedAt" json:"updatedAt,omitempty"`
	CreatedBy  int64  `protobuf:"varint,10,opt,name=createdBy" json:"createdBy,omitempty"`
}

func (m *CellItem) Reset()                    { *m = CellItem{} }
func (m *CellItem) String() string            { return proto1.CompactTextString(m) }
func (*CellItem) ProtoMessage()               {}
func (*CellItem) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *CellItem) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CellItem) GetImg() string {
	if m != nil {
		return m.Img
	}
	return ""
}

func (m *CellItem) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *CellItem) GetPremission() int32 {
	if m != nil {
		return m.Premission
	}
	return 0
}

func (m *CellItem) GetCate() int32 {
	if m != nil {
		return m.Cate
	}
	return 0
}

func (m *CellItem) GetFromID() string {
	if m != nil {
		return m.FromID
	}
	return ""
}

func (m *CellItem) GetFromURL() string {
	if m != nil {
		return m.FromURL
	}
	return ""
}

func (m *CellItem) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *CellItem) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *CellItem) GetCreatedBy() int64 {
	if m != nil {
		return m.CreatedBy
	}
	return 0
}

type CellsReply struct {
	Cells []*CellItem `protobuf:"bytes,2,rep,name=cells" json:"cells,omitempty"`
}

func (m *CellsReply) Reset()                    { *m = CellsReply{} }
func (m *CellsReply) String() string            { return proto1.CompactTextString(m) }
func (*CellsReply) ProtoMessage()               {}
func (*CellsReply) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *CellsReply) GetCells() []*CellItem {
	if m != nil {
		return m.Cells
	}
	return nil
}

func init() {
	proto1.RegisterType((*CellItem)(nil), "proto.CellItem")
	proto1.RegisterType((*CellsReply)(nil), "proto.CellsReply")
}

func init() { proto1.RegisterFile("cells.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x4d, 0x6b, 0xf3, 0x30,
	0x10, 0x84, 0x5f, 0xdb, 0x71, 0x3e, 0x36, 0x2f, 0xfd, 0xd0, 0xa1, 0x88, 0x50, 0x8a, 0x09, 0x14,
	0x7c, 0x32, 0x25, 0xb9, 0xf4, 0x1a, 0xb7, 0x50, 0x02, 0x39, 0x04, 0x41, 0x7f, 0x80, 0x6a, 0x6f,
	0x13, 0x81, 0x25, 0xb9, 0xf6, 0x06, 0x9a, 0x5b, 0x7f, 0x7a, 0xb1, 0xe4, 0xb4, 0xe9, 0xc9, 0xa3,
	0x79, 0x76, 0x76, 0xcd, 0xc0, 0xb4, 0xc0, 0xaa, 0x6a, 0xb3, 0xba, 0xb1, 0x64, 0x59, 0xec, 0x3e,
	0xb3, 0xff, 0x85, 0xd5, 0xda, 0x1a, 0x6f, 0xce, 0xbf, 0x42, 0x18, 0x3f, 0x61, 0x55, 0xad, 0x09,
	0x35, 0xbb, 0x80, 0x50, 0x95, 0x3c, 0x48, 0x82, 0x34, 0x16, 0xa1, 0x2a, 0xd9, 0x15, 0x44, 0x4a,
	0xef, 0x78, 0x98, 0x04, 0xe9, 0x44, 0x74, 0x92, 0x31, 0x18, 0x10, 0x7e, 0x12, 0x8f, 0x9c, 0xe5,
	0x34, 0xbb, 0x03, 0xa8, 0x1b, 0xd4, 0xaa, 0x6d, 0x95, 0x35, 0x7c, 0xe0, 0xd2, 0x67, 0x4e, 0x97,
	0x29, 0x24, 0x21, 0x8f, 0x1d, 0x71, 0x9a, 0xdd, 0xc0, 0xf0, 0xbd, 0xb1, 0x7a, 0xfd, 0xcc, 0x87,
	0x6e, 0x53, 0xff, 0x62, 0x1c, 0x46, 0x9d, 0x7a, 0x15, 0x1b, 0x3e, 0x72, 0xe0, 0xf4, 0x64, 0xb7,
	0x30, 0x29, 0x1a, 0x94, 0x84, 0xe5, 0x8a, 0xf8, 0x38, 0x09, 0xd2, 0x48, 0xfc, 0x1a, 0x1d, 0x3d,
	0xd4, 0x65, 0x4f, 0x27, 0x9e, 0xfe, 0x18, 0x67, 0xd9, 0xfc, 0xc8, 0xe1, 0x4f, 0x36, 0x3f, 0xce,
	0x97, 0x00, 0x5d, 0x03, 0xad, 0xc0, 0xba, 0x3a, 0xb2, 0x7b, 0x88, 0x5d, 0x69, 0x3c, 0x4c, 0xa2,
	0x74, 0xba, 0xb8, 0xf4, 0x3d, 0x65, 0xa7, 0x8e, 0x84, 0xa7, 0x8b, 0x15, 0xc4, 0x2e, 0xc4, 0x1e,
	0x61, 0xf4, 0x82, 0xb4, 0x51, 0x2d, 0x31, 0xde, 0xcf, 0x6e, 0xe5, 0x4e, 0x19, 0x49, 0xca, 0x1a,
	0x81, 0x1f, 0x07, 0x6c, 0x69, 0x76, 0x7d, 0xb6, 0xc5, 0xdf, 0x99, 0xff, 0xcb, 0x1f, 0x20, 0x29,
	0xac, 0xce, 0xa4, 0x31, 0x92, 0x64, 0xb3, 0xc7, 0x4c, 0xd2, 0x1e, 0x8d, 0xec, 0x47, 0xdd, 0x99,
	0xdc, 0xff, 0xd9, 0xb6, 0x73, 0xb6, 0xc1, 0xdb, 0xd0, 0xa1, 0xe5, 0x77, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xb1, 0x84, 0xa1, 0x3f, 0xd7, 0x01, 0x00, 0x00,
}
