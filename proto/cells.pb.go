// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cells.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	cells.proto
	hello.proto

It has these top-level messages:
	CellsRequest
	CellItem
	CellsReply
	HelloRequest
	HelloReply
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type CellsRequest struct {
	From   int32 `protobuf:"varint,1,opt,name=from" json:"from,omitempty"`
	Take   int32 `protobuf:"varint,2,opt,name=take" json:"take,omitempty"`
	Offset int32 `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
}

func (m *CellsRequest) Reset()                    { *m = CellsRequest{} }
func (m *CellsRequest) String() string            { return proto1.CompactTextString(m) }
func (*CellsRequest) ProtoMessage()               {}
func (*CellsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CellsRequest) GetFrom() int32 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *CellsRequest) GetTake() int32 {
	if m != nil {
		return m.Take
	}
	return 0
}

func (m *CellsRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type CellItem struct {
	Id         int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Img        string `protobuf:"bytes,2,opt,name=img" json:"img,omitempty"`
	Text       string `protobuf:"bytes,3,opt,name=text" json:"text,omitempty"`
	Premission int32  `protobuf:"varint,4,opt,name=premission" json:"premission,omitempty"`
	Cate       int32  `protobuf:"varint,5,opt,name=cate" json:"cate,omitempty"`
	FromID     string `protobuf:"bytes,6,opt,name=fromID" json:"fromID,omitempty"`
	FromURL    string `protobuf:"bytes,7,opt,name=fromURL" json:"fromURL,omitempty"`
	CreatedAt  int64  `protobuf:"varint,8,opt,name=createdAt" json:"createdAt,omitempty"`
}

func (m *CellItem) Reset()                    { *m = CellItem{} }
func (m *CellItem) String() string            { return proto1.CompactTextString(m) }
func (*CellItem) ProtoMessage()               {}
func (*CellItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CellItem) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CellItem) GetImg() string {
	if m != nil {
		return m.Img
	}
	return ""
}

func (m *CellItem) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *CellItem) GetPremission() int32 {
	if m != nil {
		return m.Premission
	}
	return 0
}

func (m *CellItem) GetCate() int32 {
	if m != nil {
		return m.Cate
	}
	return 0
}

func (m *CellItem) GetFromID() string {
	if m != nil {
		return m.FromID
	}
	return ""
}

func (m *CellItem) GetFromURL() string {
	if m != nil {
		return m.FromURL
	}
	return ""
}

func (m *CellItem) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

type CellsReply struct {
	Cells []*CellItem `protobuf:"bytes,2,rep,name=cells" json:"cells,omitempty"`
}

func (m *CellsReply) Reset()                    { *m = CellsReply{} }
func (m *CellsReply) String() string            { return proto1.CompactTextString(m) }
func (*CellsReply) ProtoMessage()               {}
func (*CellsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CellsReply) GetCells() []*CellItem {
	if m != nil {
		return m.Cells
	}
	return nil
}

func init() {
	proto1.RegisterType((*CellsRequest)(nil), "proto.CellsRequest")
	proto1.RegisterType((*CellItem)(nil), "proto.CellItem")
	proto1.RegisterType((*CellsReply)(nil), "proto.CellsReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Cells service

type CellsClient interface {
	GetList(ctx context.Context, in *CellsRequest, opts ...grpc.CallOption) (*CellsReply, error)
}

type cellsClient struct {
	cc *grpc.ClientConn
}

func NewCellsClient(cc *grpc.ClientConn) CellsClient {
	return &cellsClient{cc}
}

func (c *cellsClient) GetList(ctx context.Context, in *CellsRequest, opts ...grpc.CallOption) (*CellsReply, error) {
	out := new(CellsReply)
	err := grpc.Invoke(ctx, "/proto.Cells/GetList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Cells service

type CellsServer interface {
	GetList(context.Context, *CellsRequest) (*CellsReply, error)
}

func RegisterCellsServer(s *grpc.Server, srv CellsServer) {
	s.RegisterService(&_Cells_serviceDesc, srv)
}

func _Cells_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CellsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CellsServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Cells/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CellsServer).GetList(ctx, req.(*CellsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cells_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Cells",
	HandlerType: (*CellsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetList",
			Handler:    _Cells_GetList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cells.proto",
}

func init() { proto1.RegisterFile("cells.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xdd, 0x4a, 0xfb, 0x40,
	0x10, 0xc5, 0xff, 0x49, 0x9a, 0x7e, 0x4c, 0xff, 0xf8, 0x31, 0x82, 0x2c, 0x45, 0xa4, 0x04, 0x84,
	0xe2, 0x45, 0x2e, 0xda, 0x5b, 0x6f, 0xac, 0x82, 0x14, 0x8a, 0x94, 0x05, 0x1f, 0x60, 0x4d, 0xa7,
	0x36, 0x98, 0x2f, 0x93, 0x11, 0xec, 0xfb, 0xf9, 0x60, 0xb2, 0xb3, 0x09, 0xd6, 0xab, 0x9c, 0x39,
	0x93, 0xf3, 0x63, 0xf6, 0xc0, 0x38, 0xa1, 0x2c, 0x6b, 0xe2, 0xaa, 0x2e, 0xb9, 0xc4, 0x50, 0x3e,
	0xd1, 0x33, 0xfc, 0x7f, 0xb0, 0xae, 0xa6, 0x8f, 0x4f, 0x6a, 0x18, 0x11, 0x7a, 0xbb, 0xba, 0xcc,
	0x95, 0x37, 0xf5, 0x66, 0xa1, 0x16, 0x6d, 0x3d, 0x36, 0xef, 0xa4, 0x7c, 0xe7, 0x59, 0x8d, 0x97,
	0xd0, 0x2f, 0x77, 0xbb, 0x86, 0x58, 0x05, 0xe2, 0xb6, 0x53, 0xf4, 0xed, 0xc1, 0xd0, 0x02, 0x57,
	0x4c, 0x39, 0x9e, 0x80, 0x9f, 0x6e, 0x5b, 0x94, 0x9f, 0x6e, 0xf1, 0x0c, 0x82, 0x34, 0x7f, 0x13,
	0xce, 0x48, 0x5b, 0x29, 0x68, 0xfa, 0x72, 0x90, 0x91, 0x16, 0x8d, 0xd7, 0x00, 0x55, 0x4d, 0x79,
	0xda, 0x34, 0x69, 0x59, 0xa8, 0x9e, 0xa4, 0x8f, 0x1c, 0x9b, 0x49, 0x0c, 0x93, 0x0a, 0xdd, 0x39,
	0x56, 0xdb, 0x73, 0xec, 0xa9, 0xab, 0x47, 0xd5, 0x17, 0x52, 0x3b, 0xa1, 0x82, 0x81, 0x55, 0x2f,
	0x7a, 0xad, 0x06, 0xb2, 0xe8, 0x46, 0xbc, 0x82, 0x51, 0x52, 0x93, 0x61, 0xda, 0xde, 0xb3, 0x1a,
	0x4e, 0xbd, 0x59, 0xa0, 0x7f, 0x8d, 0x68, 0x01, 0xd0, 0xd6, 0x52, 0x65, 0x07, 0xbc, 0x81, 0x50,
	0xaa, 0x53, 0xfe, 0x34, 0x98, 0x8d, 0xe7, 0xa7, 0xae, 0xc2, 0xb8, 0x7b, 0xa7, 0x76, 0xdb, 0xf9,
	0x1d, 0x84, 0x12, 0xc2, 0x05, 0x0c, 0x9e, 0x88, 0xd7, 0x69, 0xc3, 0x78, 0x71, 0xf4, 0x6f, 0x57,
	0xf2, 0xe4, 0xfc, 0xaf, 0x59, 0x65, 0x87, 0xe8, 0xdf, 0xf2, 0x16, 0x26, 0x49, 0x99, 0xc7, 0xa6,
	0x28, 0x0c, 0x9b, 0x7a, 0x4f, 0xb1, 0xe1, 0x3d, 0x15, 0x26, 0x16, 0xf6, 0xd2, 0x9d, 0xb3, 0xb1,
	0xb1, 0x8d, 0xf7, 0xda, 0x97, 0xfc, 0xe2, 0x27, 0x00, 0x00, 0xff, 0xff, 0xde, 0x24, 0xc3, 0xbf,
	0xd2, 0x01, 0x00, 0x00,
}
